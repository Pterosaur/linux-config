
setopt nosharehistory

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# Keypad
# 0 . Enter
bindkey -s "^[Op" "0"
bindkey -s "^[Ol" "."
bindkey -s "^[OM" "^M"
# 1 2 3
bindkey -s "^[Oq" "1"
bindkey -s "^[Or" "2"
bindkey -s "^[Os" "3"
# 4 5 6
bindkey -s "^[Ot" "4"
bindkey -s "^[Ou" "5"
bindkey -s "^[Ov" "6"
# 7 8 9
bindkey -s "^[Ow" "7"
bindkey -s "^[Ox" "8"
bindkey -s "^[Oy" "9"
# + -  * /
bindkey -s "^[Ok" "+"
bindkey -s "^[Om" "-"
bindkey -s "^[Oj" "*"
bindkey -s "^[Oo" "/"

_sshpass_completion() {
    local cur pre cmd passwords_path
    cur=${words[CURRENT]}
    pre=${words[CURRENT-1]}
    cmd=${words[1]}
    passwords_path="${HOME}/.passwords.txt"
    if [[ "${pre}" == "-p" && -f ${passwords_path} ]]; then
        local passwords
        passwords=($(cat ${passwords_path} ))
        compadd -M 'm:{a-zA-Z}={A-Za-z} r:|.=* r:|=*' -a "$@" - passwords
        return 0
    else
        local service service_index
        service_index=${words[(I)$~@(ssh|scp)]}
        if [[ ${service_index} == 0 ]]; then
            _default
            return
        fi
        service=${words[service_index]}
        (( service_index-- ))
        CURRENT=$(( ${CURRENT} - ${service_index} ))
        words=("${words[@]:$service_index}")
        curcontext=":complete:${service}:"
        _ssh
    fi
}

compdef _sshpass_completion sshpass

_git_fuzzy() {
    if [[ -n $COMPSTATE[insert] ]]; then return; fi
    local cur prev cmd sub_cmd repo_list

    cur=${words[CURRENT]}
    prev=${words[CURRENT-1]}
    cmd=${words[1]}
    sub_cmd=${words[2]}
    action=${words[3]}

    if [[ "${cmd}" == "git" && ( "${sub_cmd}" == "clone" || ("${sub_cmd}" == "remote" && ${action} == "add" ) ) ]]; then
        local repo_file="${HOME}/.git_repos"
        local repo
        if [[ -f "$repo_file" ]]; then
            repo=$(cat "$repo_file" | fzf )
        fi
        compadd -Q -S '' -- "$repo"
        return 0
    else
        _git
    fi
}

compdef _git_fuzzy git

